- insert_many : approx 1.6s per page (1 page = 500 tweets)  --VS--  insert_one : approx 70s per page (1 page = 500 tweets) !!! crazy
- https://janakiev.com/blog/python-background/ for nohup and killing processes
- according to Twitter: "only 1-2% of tweets have geo location" (https://developer.twitter.com/en/docs/tutorials/tweet-geo-metadata)
- "apple OR iphone ipad would be evaluated as apple OR (iphone ipad)" (https://developer.twitter.com/en/docs/twitter-api/tweets/search/integrate/build-a-query)


topics
- sustainable finance
- sustainable fashion
- supply chains sustainability


research stuff:
- who are the main makers of influential tweets? is it regular users, NGOs or celebs?

- precision vs recall: I know that for any given topic X I did not search all the relevant hashtags, so there are tweets that are
about X and which I did not fetch. However I also know that all the tweets I have fetched that I think are on X are indeed on X

queries:
- DONE: (\"supply chain sustainability\" OR \"sustainable supply chain\" OR \"sustainable supply chains\" OR #supplychainsustainability OR #sustainablesupplychain OR #susuatinablesupplychains) -is:retweet -is:nullcast
- DONE: (\"sustainable fashion\" OR #sustainablefashion OR #ecofashion OR \"eco-fashion\" OR \"eco fashion\") -is:retweet -is:nullcast
- DONE: (renewable energy OR renewable energies OR #renewableenergy OR \"sustainable energy\" OR #sustainableenergy OR #greenenergy OR \"green energy\" OR \"clean energy\" OR #cleanenergy) -is:retweet -is:nullcast
- DONE: (\"electric vehicles\" OR #electricvehicles OR \"electric mobility\" OR #electricmobility) -is:retweet -is:nullcast
- DONE: (reforestation OR #reforestation) -is:retweet -is:nullcast
- DONE: (afforestation OR #afforestation) -is:retweet -is:nullcast

- (\"sustainable finance\" OR \"green finance\" OR \"environmental finance\" OR #sustainablefinance OR #greenfinance OR #environmentalfinance) -is:retweet -is:nullcast
- (\"green bonds\" OR #greenbonds) -is:retweet -is:nullcast
- (air pollution OR #airpollution) -is:retweet -is:nullcast
- (green economy OR #greeneconomy) -is:retweet -is:nullcast
- (global warming OR #globalwarming) -is:retweet -is:nullcast


- cyberduck
- nohup long_script.py &
- ssh ubuntu@146.169.11.55


check if that guy who made a list of academic philosophers on twitter also did it for environment scholars



online tools allow you to find hashtags details but 
1) not for all hashtags (sometimes they say "we haven't checked this hashtag, come back in a few days)
2) not keywords!





- completed queries:

1)
    twitterSearch = full_archive_search_v2.TwitterSearch(BEARER_TOKEN, mongoDevCol)
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2020-09-01T00:00:00-05:00",
        "end_time": "2021-01-01T00:00:00-05:00"
    }

    queryValue = "(regenerative agriculture OR #regenerativeagriculture) -is:retweet -is:nullcast"
    queryTag = "Regenerative Agriculture"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()

    queryValue = "(\"food waste\" OR #foodwaste) -is:retweet -is:nullcast"
    queryTag = "Food Waste"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()

    queryValue = "(biodiversity loss OR #biodiversityloss) -is:retweet -is:nullcast"
    queryTag = "Biodiversity Loss"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()

    queryValue = "(meat consumption OR #meatconsumption OR #reducemeatconsumption OR #Meatconsumption OR #MeatConsumption OR #MEATCONSUMPTION) -is:retweet -is:nullcast"
    queryTag = "Meat Consumption"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()

    queryValue = "(\"supply chain sustainability\" OR \"sustainable supply chain\" OR \"sustainable supply chains\" OR #supplychainsustainability OR #sustainablesupplychain OR #susuatinablesupplychains) -is:retweet -is:nullcast"
    queryTag = "Supply Chain Sustainability"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(\"sustainable fashion\" OR #sustainablefashion OR #ecofashion OR \"eco-fashion\" OR \"eco fashion\") -is:retweet -is:nullcast"
    queryTag = "Sustainable Fashion / Eco-fashion"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(renewable energy OR renewable energies OR #renewableenergy OR \"sustainable energy\" OR #sustainableenergy OR #greenenergy OR \"green energy\" OR \"clean energy\" OR #cleanenergy) -is:retweet -is:nullcast"
    queryTag = "Green/Sustainable Energy"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(\"electric vehicles\" OR #electricvehicles OR \"electric mobility\" OR #electricmobility) -is:retweet -is:nullcast"
    queryTag = "Electric Vehicles / Electric Mobility"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()



    queryValue = "(reforestation OR #reforestation) -is:retweet -is:nullcast"
    queryTag = "Reforestation"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(afforestation OR #afforestation) -is:retweet -is:nullcast"
    queryTag = "Afforestation"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


2)
    - FINISHED
queryValue = "(regenerative agriculture OR #regenerativeagriculture) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }
    queryTag = "Regenerative Agriculture"


3)
- NOT FINISHED ---> this one is WRONG!!!!!!!! QUERY DATABASE TO FIX THIS! --> not present in db for some reason so good news eheh
queryValue = "(food waste loss OR #foodwaste) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }
    queryTag = "Food Waste"


4)
- FINISHED:
queryValue = "(biodiversity loss OR #biodiversityloss) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-03-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }
    queryTag = "Biodiversity Loss"


5)
- FINISHED:
queryValue = "(biodiversity loss OR #biodiversityloss) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-03-01T00:00:00-05:00"
    }
    queryTag = "Biodiversity Loss"


6)
-FINISHED:
queryValue = "(meat consumption OR #meatconsumption OR #reducemeatconsumption OR #Meatconsumption OR #MeatConsumption OR #MEATCONSUMPTION) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-03-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }
    queryTag = "Meat Consumption"


7)
-FINISHED:
queryValue = "(meat consumption OR #meatconsumption OR #reducemeatconsumption OR #Meatconsumption OR #MeatConsumption OR #MEATCONSUMPTION) -is:retweet -is:nullcast"
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-03-01T00:00:00-05:00"
    }
    queryTag = "Meat Consumption"


8)
    FINISHED LIST:
    queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }


    queryValue = "(\"supply chain sustainability\" OR \"sustainable supply chain\" OR \"sustainable supply chains\" OR #supplychainsustainability OR #sustainablesupplychain OR #susuatinablesupplychains) -is:retweet -is:nullcast"
    queryTag = "Supply Chain Sustainability"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(\"sustainable fashion\" OR #sustainablefashion OR #ecofashion OR \"eco-fashion\" OR \"eco fashion\") -is:retweet -is:nullcast"
    queryTag = "Sustainable Fashion / Eco-fashion"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(renewable energy OR renewable energies OR #renewableenergy OR \"sustainable energy\" OR #sustainableenergy OR #greenenergy OR \"green energy\" OR \"clean energy\" OR #cleanenergy) -is:retweet -is:nullcast"
    queryTag = "Green/Sustainable Energy"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(\"electric vehicles\" OR #electricvehicles OR \"electric mobility\" OR #electricmobility) -is:retweet -is:nullcast"
    queryTag = "Electric Vehicles / Electric Mobility"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()



    queryValue = "(reforestation OR #reforestation) -is:retweet -is:nullcast"
    queryTag = "Reforestation"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


    queryValue = "(afforestation OR #afforestation) -is:retweet -is:nullcast"
    queryTag = "Afforestation"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()



    queryValue = "(\"sustainable finance\" OR \"green finance\" OR \"environmental finance\" OR #sustainablefinance OR #greenfinance OR #environmentalfinance) -is:retweet -is:nullcast"
    queryTag = "Sustainable Finance"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()



    queryValue = '("green bonds" OR #greenbonds) -is:retweet -is:nullcast -"sustainable finance" -"green finance" -"environmental finance" -#sustainablefinance -#greenfinance -#environmentalfinance'
    queryTag = "Green Bonds"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()


DONE:
queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2020-09-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }
    queryValue = "(\"Air pollution\" OR \"air pollution\" OR \"Clean air\" OR \"clean air\" OR #airpollution OR #AirPollution OR #AIRPOLLUTION OR #cleanair OR #CleanAir OR #CLEANAIR) -is:retweet -is:nullcast"
    queryTag = "Air Pollution / Clean Air"










challenges:
- insert one vs insert many, 70s vs 1.6s !
- pymongo error: distinct too big, max 16mb
- different waiting time between geo requests and search requests (3s vs 12s)


meeting:
- 70s vs 1.6s in insert_many vs insert_one
- fetched 1.5+ million tweets with these topics: 
- data exploration works (but for smaller dataset, show example with graphs)
- tried two approaches: manually flattening data, or using json_normalize
- I once managed to plot a time series for half a million tweets but didn't take a screenshot ouch























sample request:
queryParams = {
        "max_results": 500,
        "tweet.fields": "author_id,created_at,geo,public_metrics",
        "expansions": "author_id",
        "user.fields": "name,public_metrics,verified",
        "start_time": "2021-01-01T00:00:00-05:00",
        "end_time": "2021-06-18T00:00:00-05:00"
    }


    queryValue = "(\"sustainable fashion\" OR #sustainablefashion OR #ecofashion OR \"eco-fashion\" OR \"eco fashion\") -is:retweet -is:nullcast"
    queryTag = "Sustainable Fashion / Eco-fashion"
    twitterSearch.setQuery(queryValue, queryParams, queryTag)
    twitterSearch.search_and_save()









- topics:
    - sustainable finance / green bonds 
    - deforestation
    - reforestation
    - afforestation
    - electric mobility / electric vehicles
    - renewable/green energy
    - regenerative agriculture
    - meat consumption
    - sustainable/green fashion
    - biodiversity loss
    - food waste

remaining: 
    - ice melting / sea level rises
    - air pollution
    - water pollution
    - soil/land pollution
    - green/circular economy

sample places:
['Oregon, USA' 'Michigan, USA' 'Towson, MD' 'San Francisco, CA'
 'Austin, TX' 'North Carolina, USA' 'Knoxville, TN'
 'Wallabadah, New South Wales' 'Oxford, England'
 'Waipa District, New Zealand' 'Kapiti Coast District, New Zealand'
 'Taupo District, New Zealand' 'Maryland, USA' 'Southampton, NY'
 'Puri, India' 'Kenmore, NY' 'Cork, Ireland' 'Ironbound Farms'
 'Kidderminster, England' 'Winnipeg, Manitoba' 'California, USA'
 'Rajendra Nagar, India' 'Wandsworth, London' 'Noida, India'
 'Bhopal, India' 'Cleveland, OH' 'Le Vésinet, France' 'Paris, France'
 'Western Australia, Australia' 'United States' 'Hawaii, USA'
 'Auckland, New Zealand' 'Canberra, Australian Capital Territory'
 'Wolfe’s Neck Center' 'Brookings, SD' 'Pershore, England' 'Medford, MA'
 'Manchester, England' 'Exeter, England' 'University of Kent'
 'West Chiltington Common, England' 'Scotland, United Kingdom'
 'Salto, Uruguay' 'East, England' 'Medchal, India' 'Idaho, USA'
 'Abuja, Nigeria' 'Nazareth, België' 'Melbourne, Victoria' 'Ohio, USA'
 'Accra, Ghana' 'Santa Monica, CA' 'Ceduna, South Australia'
 'Port Lincoln, South Australia']




challenges:
- geo data rate limits different from standard search rate limits
- batching data and caching it in mongo because it is too much toanalyze it on the fly or keep it in the machine's memory